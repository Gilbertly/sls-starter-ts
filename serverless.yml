service: starter-ts
frameworkVersion: '>2.4'
configValidationMode: error
useDotenv: true

plugins:
  - serverless-iam-roles-per-function
  - serverless-webpack

custom:
  webpack:
    webpackConfig: config/webpack.config.js
    packagePath: .package.json
    includeModules: false
    excludeFiles: src/__tests__
    packager: npm
    forceExclude: [aws-sdk]
  param: ${file(./serverless.env.yml):${self:provider.stage, 'dev'}}

provider:
  name: aws
  runtime: ${self:custom.param.NODE_VERSION}
  timeout: 10 # seconds
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  lambdaHashingVersion: 20201221
  stackName: ${self:provider.stage}-${self:service}
  logRetentionInDays: ${self:custom.param.LOG_RETENTION}
  tags:
    project: ${self:provider.stage}-${self:service}
  apiGateway:
    apiKeySourceType: HEADER
    shouldStartNameWithService: true
    apiKeys:
      - ${self:provider.stage}-${self:service}
  deploymentBucket:
    blockPublicAccess: true
    serverSideEncryption: AES256
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    NODE_TLS_REJECT_UNAUTHORIZED: 0
    SENTRY_DSN: ${self:custom.param.SENTRY_DSN}

layers:
  dependencies:
    name: ${self:provider.stage}-${self:service}
    description: Starter typescript project dependencies ${self:custom.param.NODE_VERSION}.
    compatibleRuntimes: ['${self:custom.param.NODE_VERSION}']
    retain: ${self:custom.param.RETAIN_LAYER}
    licenseInfo: MIT
    path: ./nodejs

functions:
  helloFunction:
    name: ${self:provider.stage}_hello_function_ts
    handler: src/functions/hello.handler
    description: Basic sample function.
    events:
      - http:
          path: /test
          method: get
          request:
            parameters:
              paths:
                message: false
          cors: true
          private: true
    iamRoleStatements:
      - Sid: AllowLambdaDynamoDBAccess
        Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:Query
        Resource: !GetAtt DynamodbTableHello.Arn
    layers: [!Ref DependenciesLambdaLayer]

resources:
  - ${file(./aws/cfnTemplateSections.yml)}
  - ${file(./aws/dynamodbTables.yml)}
